import { model, Schema, Document } from 'mongoose'

const UserSchema = new Schema(
  {
    walletAddress: {
      type: String,
      required: true,
      unique: true,
    },
    displayName: {
      type: String,
      required: true,
    },
    pictureUrl: {
      type: String,
    },
    age: Number,
    location: {
      country: String,
      state: String,
      city: String,
    },
    gender: {
      type: String,
      enum: ['Male', 'Female', 'Non-Binary', 'Transgender', 'Other', 'Prefer Not to Say'],
    },
    languages: [String],
    maritalStatus: {
      type: String,
      enum: ['Single', 'Married', 'Divorced', 'Widowed', 'Separated', 'Domestic Partnership', 'Other'],
    },
    householdSize: Number,
    householdIncome: {
      type: String,
      enum: [
        'Less than $25,000',
        '$25,000 - $50,000',
        '$50,001 - $75,000',
        '$75,001 - $100,000',
        '$100,001 - $150,000',
        '$150,001 - $200,000',
        'Over $200,000',
        'Prefer Not to Say',
      ],
    },

    employmentStatus: {
      type: String,
      enum: ['Employed', 'Self-Employed', 'Unemployed', 'Student', 'Retired', 'Other'],
    },
    employmentIndustry: {
      type: String,
      enum: [
        'Technology',
        'Healthcare',
        'Finance',
        'Manufacturing',
        'Retail',
        'Education',
        'Entertainment',
        'Energy',
        'Agriculture',
        'Government',
        'Hospitality',
        'Construction',
        'Media',
        'Other',
      ],
    },
    religion: String,
    politicalAffiliation: {
      type: String,
      enum: ['Democrat', 'Republican', 'Independent', 'Libertarian', 'Green Party', 'Other', 'None', 'Prefer Not to Say'],
    },
    accessibilityNeeds: {
      type: String,
      enum: ['Mobility Impairment', 'Vision Impairment', 'Hearing Impairment', 'Cognitive Impairment', 'Other', 'None'],
    },
    healthStatus: {
      type: String,
      enum: ['Excellent', 'Good', 'Fair', 'Poor', 'Prefer Not to Say'],
    },
    veteranStatus: {
      type: String,
      enum: ['Veteran', 'Active Duty', 'Reserve', 'Not a Veteran', 'Prefer Not to Say'],
    },
    skills: {
      type: [String],
      enum: [
        'Programming',
        'Software Development',
        'Database Management',
        'Data Analysis',
        'Machine Learning',
        'Artificial Intelligence',
        'UI/UX Design',
        'Cybersecurity',
        'Project Management',
        'Communication',
        'Problem Solving',
        'Teamwork',
        'Leadership',
        'Creativity',
        'Time Management',
        'Critical Thinking',
        'Analytical Skills',
        'Research',
        'Writing',
        'Presentation Skills',
        'Networking',
        'Foreign Languages',
        'Mathematics',
        'Science',
        'Engineering',
        'Business',
        'Other',
      ],
    },
    techSkills: {
      type: [String],
      enum: [
        'Front-end Development',
        'Back-end Development',
        'Full-stack Development',
        'Mobile App Development',
        'Web Development',
        'Cloud Computing',
        'DevOps',
        'Data Science',
        'Machine Learning',
        'Artificial Intelligence',
        'Database Management',
        'UI/UX Design',
        'Cybersecurity',
        'Blockchain',
        'Game Development',
        'IoT',
        'Other',
      ],
    },
    education: {
      type: [String],
      enum: [
        'High School Diploma',
        'Associate Degree',
        "Bachelor's Degree",
        "Master's Degree",
        'Ph.D.',
        'MD',
        'MBA',
        'JD',
        'Certification',
        'Bootcamp',
        'Online Course',
        'Other',
      ],
    },
    workExperience: {
      type: [String],
      enum: [
        'Internship',
        'Entry-Level',
        'Mid-Level',
        'Senior',
        'Manager',
        'Director',
        'Executive',
        'Freelance',
        'Consultant',
        'Contract',
        'Part-Time',
        'Full-Time',
        'Other',
      ],
    },
    interests: {
      type: [String],
      enum: [
        'Sports',
        'Travel',
        'Cooking',
        'Music',
        'Reading',
        'Gaming',
        'Art',
        'Fitness',
        'Hiking',
        'Technology',
        'Science',
        'Photography',
        'Movies',
        'Volunteering',
        'Fashion',
        'Nature',
        'Pets',
        'Food',
        'Writing',
        'History',
        'Politics',
        'Religion',
        'Outdoor Activities',
        'Other',
      ],
    },
  },
  {
    timestamps: true,
    autoIndex: true,
    autoCreate: true,
  }
).index({ walletAddress: 1 }, { unique: true })

export interface UserInterface extends Document {
  walletAddress: string
  displayName: string
  pictureUrl?: string
}

export const UserModel = model<UserInterface>('User', UserSchema)
